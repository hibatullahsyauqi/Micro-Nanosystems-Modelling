import numpy as np

def solve_spring_system(k, W):
    # Создаем матрицу коэффициентов системы уравнений
    A = np.array([[k[0]+k[1]+k[2]+k[4], -k[2], -k[4]],
                  [-k[2], k[2]+k[3], -k[3]],
                  [-k[4], -k[3], k[3]+k[4]]])
    # Создаем вектор правой части системы уравнений
    B = np.array([W[0], W[1], W[2]])
    # Находим обратную матрицу для матрицы коэффициентов
    A_inv = np.linalg.inv(A)
    # Решаем систему уравнений, умножая обратную матрицу на вектор правой части
    X = np.dot(A_inv, B)
    return X

# Заданные значения жесткостей пружин и соотношений масс
k = [1, 2, 1, 1, 2]
W = [2, 1, 2]

# Решаем систему уравнений
solution = solve_spring_system(k, W)

# Выводим решение
print("Решение системы уравнений:")
print("x1 =", solution[0])
print("x2 =", solution[1])
print("x3 =", solution[2])